#!/usr/bin/env python

#####################################################
# mdtest runner for the Clover programming language #
#####################################################

import sys
import os
from distutils import spawn

desired = []

if spawn.find_executable("clover") is None:
    with open(sys.argv[3], "a+") as err:
        err.write("Could not find valid Clover compiler.\n");
    exit(1)

with open(sys.argv[1], "r") as f:
    lines = f.readlines()
    for line in lines:
        if "#" in line:
            output = line[line.index("#") + 1:].lstrip().rstrip()
            desired.append(output)

os.rename(sys.argv[1], "mdtest.cl")
exec_result = os.system("clover mdtest.cl 1> " + sys.argv[2] + " 2> " + sys.argv[3])
os.rename("mdtest.cl", sys.argv[1])
if os.path.exists("mdtest.c"): os.remove("mdtest.c")
if os.path.exists("mdtest.h"): os.remove("mdtest.h")
if exec_result != 0:
    with open(sys.argv[3], "a+") as err:
        err.write("Clover compiler error.")
        with open(sys.argv[2]) as f:
            for line in f.readlines():
                err.write("  " + line)
    exit(1)

with open(sys.argv[2], "r") as f:
    with open(sys.argv[3], "a+") as err:
        lines = f.readlines()
        lineno = 1
        for correct, line in zip(desired, lines):
            if line is None and correct is not None:
                err.write("Output mismatch on line " + str(lineno) + ": expected '" + correct + "' but found empty line.\n")
                f.close()
                err.close()
                exit(1)
            trimmed = line.lstrip().rstrip()
            if trimmed != correct:
                err.write("Output mismatch on line " + str(lineno) + ": expected '" + correct + "' but found '" + trimmed + "'.\n")
                f.close()
                err.close()
                exit(1)
            lineno += 1
