#!/usr/bin/env python

import sys
import os
from distutils import spawn

desired = []

cxx = None
cxx_options = [
    "g++", "clang++",
    "g++-11", "clang++-14", "g++-10", "clang++-13", "g++-9", "clang++-12", "g++-8", "clang++-11", "g++-7", "clang++-10", 
    "g++-6", "clang++-9", "g++-5", "clang++-8", "g++-4", "clang++-7", "g++-3", "clang++-6", "g++-2", "g++-1", "clang++-5", 
    "clang++-4", "clang++-3", "clang++-2", "clang++-1"
]

try:
    cxx = os.environ["CXX"]
except:
    for cxx_opt in cxx_options:
        cxx_path = spawn.find_executable(cxx_opt)
        if cxx_path is not None:
            cxx = cxx_path
            break
if cxx is None:
    with open(sys.argv[3]) as err:
        err.write("Could not find valid C++ compiler. Consider setting the CXX environment variable.\n");
    exit(1)

with open(sys.argv[1], "r") as f:
    lines = f.readlines()
    for line in lines:
        if "//" in line:
            output = line[line.index("//") + 2:].lstrip().rstrip()
            desired.append(output)

os.rename(sys.argv[1], "mdtest.cpp")
compile_result = os.system(cxx + " mdtest.cpp -o a.out 2> " + sys.argv[3])
os.rename("mdtest.cpp", sys.argv[1])
if compile_result != 0:
    exit(1)
exec_result = os.system("./a.out " + sys.argv[1] + " 1> " + sys.argv[2] + " 2> " + sys.argv[3])
os.remove("./a.out")
if exec_result != 0:
    exit(1)

with open(sys.argv[2], "r") as f:
    with open(sys.argv[3], "a+") as err:
        lines = f.readlines()
        lineno = 1
        for correct, line in zip(desired, lines):
            if line is None and correct is not None:
                err.write("Output mismatch on line " + str(lineno) + ": expected '" + correct + "' but found empty line.\n")
                f.close()
                err.close()
                exit(1)
            trimmed = line.lstrip().rstrip()
            if trimmed != correct:
                err.write("Output mismatch on line " + str(lineno) + ": expected '" + correct + "' but found '" + trimmed + "'.\n")
                f.close()
                err.close()
                exit(1)
            lineno += 1